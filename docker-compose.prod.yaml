version: "3.7"

services:
  backend:
    build:
      context: ./Backend/
      dockerfile: ./dockerfile
    container_name: rust_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - YOOCASSA_STORE_ID=${YOOCASSA_STORE_ID} 
      - YOOCASSA_KEY=${YOOCASSA_KEY}
      - TOKEN=${TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - EMAILER_URL=${EMAILER_URL}
    ports:
      - "8090:8090"
  emailer:
    build:
      context: ./Backend_emailer/
      dockerfile: ./dockerfile
    container_name: emailer
    restart: unless-stopped
    environment:
      - SENDER_EMAIL=${SENDER_EMAIL}
      - SENDER_PASSWORD=${SENDER_PASSWORD}
      
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/nginx.dockerfile
      args:
        - VUE_APP_API_URL=${VUE_APP_API_URL:-localhost}
    container_name: nginx
    restart: always
    command: [ "/bin/sh", "-c", "while :; nginx -s reload; do sleep 6h & wait $${!}; done & nginx -g 'daemon off;'" ]
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/options-ssl-nginx.conf:/etc/nginx/conf.d/options-ssl-nginx.conf
      - ./docker/nginx/ssl-dhparams.pem:/etc/nginx/conf.d/ssl-dhparams.pem
    ports:
      - "80:80"
      - "443:443"


  pg_db:
    image: postgres:15.1-alpine
    container_name: pg_db
    restart: always
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=tours
    volumes:
      - db_pg_volume:/var/lib/postgresql/data/

  # adminer:
  #   image: adminer
  #   container_name: adminer
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - pg_db

  certbot:
    image: certbot/dns-cloudflare
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --dns-cloudflare-credentials /cloudflare.ini; sleep 3d & wait $${!}; done;'"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "2"
    volumes:
      - ./docker/certbot/cloudflare.ini:/opt/cerbot/cloudflare.ini
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot

volumes:
  db_pg_volume:

networks:
  ibuymovie-network:
    driver: bridge
    
    
    
    
